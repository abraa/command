<?php
/**
 * ====================================
 * 积分接口
 * ====================================
 * Author: 9004396
 * Date: 2017-03-30 16:22
 * ====================================
 * Project: new.m.chinaskin.cn
 * File: IntegralController.class.php
 * ====================================
 */

namespace Api\Controller;

use Common\Controller\InterfaceController;
use Common\Extend\Integral;
use Common\Extend\Time;
use Common\Extend\User;
use Common\Extend\PhxCrypt;

class IntegralController extends InterfaceController
{
    private $para;
    private $typeTable = array(
        '1' => 'PRE_SALE',  //售前呼叫中心
        '2' => 'ORDER_ASSESS', //订单
        '3' => 'AFTER_SALE',  //售后呼叫中心
    );

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $busStr = I('param.busData', '', 'htmlspecialchars_decode'); //接受业务参数
        $this->para = json_decode(trim($busStr), true);
    }

    /**
     * 合并帐号积分 - 合并到主帐号（客户编号为主）
     */
    public function userMarge() {
        $para = $this->para;
        $primary_custom_id = isset($para['primary_custom_id']) ? intval($para['primary_custom_id']) : 0;  //主帐号的客户ID
        $child_custom_mobile = !empty($para['child_custom_mobile']) ? $para['child_custom_mobile'] : array();  //多个密文的手机号码

        if($primary_custom_id <= 0 || empty($child_custom_mobile)){
            $this->error('20001','',true);  //参数异常
        }
        $integral = new Integral();
        $result  = $integral->userMarge($primary_custom_id, $child_custom_mobile);

        if($result < 1){
            switch($result){
                case -1:
                    $this->error('E00101');  //主帐号或者子帐号不存在
                break;
                case -2:
                    $this->error('E00102');  //主帐号的积分无效或者不存在
                break;
                case -3:
                    $this->error('E00103');  //转移积分失败
                    break;
                case -4:
                    $this->error('E00104');  //旧主帐号积分出现异常
                    break;
                case -5:
                    $this->error('E00105');  //旧主帐号积分积分返还出错
                    break;
                //case -6:
                //    $this->error('E00106');  //帐号已经被合并，不可再次合并
                //    break;
                case -7:
                    $this->error('E00107');  //子帐号的所有手机号码都未注册
                    break;
                default:
                    $this->error('20006','',true);  //未知错误
                break;
            }
        }
        $this->success();
    }

    /**
     * 用户积分变更，消费、入账等等
     */
    public function operateUser() {
        $para = $this->para;
        $user_id = !empty($para['user_id']) ? intval($para['user_id']) : 0;
        $mobile = !empty($para['mobile']) ? trim($para['mobile']) : '';
        $custom_id = !empty($para['custom_id']) ? trim($para['custom_id']) : '';
        $integral = !empty($para['integral']) ? intval($para['integral']) : 0;
        $type = !empty($para['type']) ? trim($para['type']) : '-';  //-：减少积分，+：增加积分
        $state = !empty($para['state']) ? intval($para['state']) : -99;
        $site_id = !empty($para['site_id']) ? intval($para['site_id']) : 0; //站点ID
        $order_sn = !empty($para['order_sn']) ? trim($para['order_sn']) : '';
        $order_id = !empty($para['order_id']) ? intval($para['order_id']) : 0;

        if ($state == -99) {
            $this->error('E00151');
        }
        //state = 2:积分商品删除,3:订单无效，4:取消订单, -4客服消费
        if (($type == '+' && !in_array($state, array(2, 3, 4))) || ($type == '-' && !in_array($state, array(-4)))) {
            $this->error('E00152');
        }

        if ($integral == 0 || !in_array($type, array('-', '+'))) {
            $this->error('E00153');
        }

        if (empty($order_sn) && empty($order_id)) {
            $this->error('E00154');
        }

        $user = new User();
        if($user_id > 0){
            $my_custom_id = D("Home/Users")->where(array('user_id'=>$user_id))->getField('custom_id');
            $user_id = empty($my_custom_id) ? 0 : $user_id;
        }else if(!empty($mobile)){
            $uid = $user->getUserIdByMobile($mobile);
            $user_id = empty($uid) ? 0 : $uid;
        }else if(!empty($custom_id)){
            $uid = $user->getUserIdByCustomNo($custom_id);
            $user_id = empty($uid) ? 0 : $uid;
        }
        if(empty($user_id)){
            $this->error('E00158');
        }

        if(!isset($my_custom_id)){
            $custom_id = D("Home/Users")->where(array('user_id'=>$user_id))->getField('custom_id');
        }else{
            $custom_id = empty($my_custom_id) ? $custom_id : $my_custom_id;
        }

        if(empty($custom_id)){
            $this->error('E00158');
        }
        //获取用户积分详情
        $IntegralTable = M('Integral',NULL,'USER_CENTER');
        $pointsDetail = $IntegralTable
            ->field('is_invalid,total_points,pay_points,points_left')
            ->where(array('customer_id' => $custom_id))
            ->order('is_invalid asc')
            ->find();
        if(empty($pointsDetail) || $pointsDetail['$pointsDetail'] > 0){
            $this->error('E00158');
        }
        $userPoints = $pointsDetail['points_left'];

        if ($state == -4 && $integral > intval($userPoints)){
            $this->error('E00159');
        }
        if(in_array($state,array(2,3,4)) && $integral > intval($pointsDetail['pay_points'])){
            $this->error('E00160');
        }

        $point = ($type == '-' ? $type : '').$integral;
        $stateMsg = L('state');
        $remark = $stateMsg[$state];
        $extra = array(
            'user_id' => $user_id,
            'order_sn' => $order_sn,
            'order_id' => $order_id,
            'type'  => 0
        );
        $integral = new Integral();
        $ret = $integral->newVariety($site_id,$point,$remark,$state,false,$extra);
        if($ret){
            $this->success();
        }else{
            $this->error('E00155');
        }
    }

    public function getIntegralInfo()
    {
        $para = $this->para;
        $user_id = !empty($para['user_id']) ? intval($para['user_id']) : 0;
        $uMobile = !empty($para['mobile']) ? trim($para['mobile']) : '';
        $this->getUserId($user_id,$uMobile);
        $integral = new Integral();
        $pointsInfo = $integral->getUserIntegralInfo($user_id);
        $this->success($pointsInfo);

    }

    public function operateUserInt()
    {
        $para = $this->para;
        $user_id = !empty($para['user_id']) ? intval($para['user_id']) : 0;
        $mobile = !empty($para['mobile']) ? trim($para['mobile']) : '';
        $integral = !empty($para['integral']) ? intval($para['integral']) : 0;
        $type = !empty($para['type']) ? trim($para['type']) : '-';  //-：减少积分，+：增加积分
        $state = !empty($para['state']) ? intval($para['state']) : -99;
        $site_id = !empty($para['site_id']) ? intval($para['site_id']) : 0; //站点ID
        $order_sn = !empty($para['order_sn']) ? trim($para['order_sn']) : '';
        $order_id = !empty($para['order_id']) ? intval($para['order_id']) : 0;

        if ($state == -99) {
            $this->error('E00033');
        }

        if (($type == '+' && !in_array($state, array(2, 3, 4))) || ($type == '-' && !in_array($state, array(-4)))) {
            $this->error('E00034');
        }

        if ($integral == 0 || !in_array($type, array('-', '+'))) {
            $this->error('E00024');
        }

        if (empty($order_sn) && empty($order_id)) {
            $this->error('E00025');
        }
        $this->getUserId($user_id,$mobile);

        if(empty($user_id)){
            $this->error('E00029');
        }

        //获取用户积分详情
        $accountModel = D('Home/UserAccount');
        $pointsDetail = $accountModel
            ->field('total_points,pay_points,points_left')
            ->where(array('user_id' => $user_id))
            ->find();
        $userPoints = $pointsDetail['points_left'];
        if ($state == -4 && $integral > intval($userPoints)){
            $this->error('E00030');
        }
        if(in_array($state,array(2,3,4)) && $integral > intval($pointsDetail['pay_points'])){
            $this->error('E00031');
        }

        $point = ($type == '-' ? $type : '').$integral;
        $stateMsg = L('state');
        $remark = $stateMsg[$state];
        $extra = array(
            'user_id' => $user_id,
            'order_sn' => $order_sn,
            'order_id' => $order_id,
            'type'  => 0
        );
        $integral = new Integral();
        $ret = $integral->variety($site_id,$point,$remark,$state,false,$extra);
        if($ret){
            $this->success();
        }else{
            $this->error('E00026');
        }
    }


    public function batchIntegral()
    {
        $para = $this->para;
        $paraTotal = (isset($para['total']) && !empty($para['total'])) ? intval($para['total']) : 0;
        unset($para['total']);
        if ($paraTotal != count($para)) {
            $this->error('20001');
        }
        $customIndex = false;
        $typeIndex = false;
        foreach ($para as &$item) {
            if (empty($item['type'])) {
                $typeIndex = true;
            } else {
                $extra_type = 0;
                switch ($item['type']) {
                    case 1:
                        $extra_type = 1;
                        break;
                    case 2:
                        $extra_type = 3;
                        break;
                    case 3:
                        $extra_type = 2;
                }
                $item['extra_type'] = $extra_type;
            }
            if (empty($item['custom_no']) && empty($item['user_id'])) {
                $customIndex = true;
            } else {
                //获取用户
                if (!empty($item['custom_no']) && empty($item['user_id'])) {
                    $user = new User();
                    $user_id = $user->getUserIdByCustomNo($item['custom_no']);
                } else {
                    $user_id = empty($item['user_id']) ? 0 : $item['user_id'];
                }
                if (empty($user_id)) {
                    $customIndex = true;
                }
                $item['user_id'] = $user_id;
            }
        }
        if ($typeIndex) {
            $this->error('20001');
        }
        $integral = new Integral();
        foreach ($para as $v) {
            if (!empty($v['user_id'])) {
                $site_id = empty($v['site_id']) ? 0 : $v['site_id'];
                $remark = '评价积分';
                $mark = L('REMARK');
                $remark = empty($mark[$v['type']]) ? $remark : $mark[$v['type']];
                $extra = array(
                    'user_id' => $user_id,
                    'type' => '2',
                    'extend_type' => $v['extra_type'],
                    'order_sn' => isset($para['order_sn']) ? $para['order_sn'] : '',
                    'order_id' => isset($para['order_id']) ? $para['order_id'] : 0,
                );
                $integral->variety($site_id, 0, $remark, 0, false, $extra);
            }
        }
        $this->success();
    }

    public function integral()
    {
        $para = $this->para;
        if (empty($para['type']) || !isset($this->typeTable[$para['type']])) {
            $this->error('20001');
        }

        if (empty($para['custom_no']) && empty($para['user_id'])) {
            $this->error('20002');
        }
        $custom_no = $para['custom_no'];
        $user_id = intval($para['user_id']);


        //获取扩展类型
        $extra_type = 0;
        switch ($para['type']) {
            case 1:
                $extra_type = 1;
                break;
            case 2:
                $extra_type = 3;
                break;
            case 3:
                $extra_type = 2;
        }


        //获取用户
        if (!empty($custom_no) && empty($user_id)) {
            $user = new User();
            $user_id = $user->getUserIdByCustomNo($custom_no);
        } else {
            $user_id = empty($para['user_id']) ? 0 : $user_id;
        }
        if (!empty($user_id)) {
            $site_id = empty($para['site_id']) ? 0 : $para['site_id'];
            $remark = '评价积分';
            $mark = L('REMARK');
            $remark = empty($mark[$para['type']]) ? $remark : $mark[$para['type']];
            $extra = array(
                'user_id' => $user_id,
                'type' => '2',
                'extend_type' => $extra_type,
                'order_sn' => isset($para['order_sn']) ? $para['order_sn'] : '',
                'order_id' => isset($para['order_id']) ? $para['order_id'] : 0,
            );
            $integral = new Integral();
            $integral->variety($site_id, 0, $remark, 0, false, $extra);
        }

        $this->success();
//        if ($ret == false) {
//            $this->error('20003');
//        } else {
//            $this->success();
//        }
    }

    private function getUserId(&$user_id,$mobile){
        if (empty($user_id) && empty($mobile)) {
            $this->error('E00012');
        }
        if (empty($user_id) && !empty($mobile)) { //用户ID不存在通过手机号码查找用户
            $user = new User();
            $uid = $user->getUserIdByMobile($mobile);
            $user_id = empty($uid) ? 0 : $uid;
        }
        if (empty($user_id)) {
            $this->error('E00013');
        }
        $userModel = D("Home/Users");
        $state = $userModel->field('state')->find($user_id);

        if ($state === false) {
            $this->error('E00014');
        } elseif ($state === NULL) {
            $this->error('E00013');
        } elseif (intval($state) == -1) {
            $this->error('E00016');
        } elseif (intval($state) == 9) {
            $this->error('E00017');
        }
    }

    /**
     * 获取用户个人积分
     * @author lirunqing 2017-6-27
     * @return [type] [description]
     */
    public function getUserIntegral(){

        $integralModel = M('integral', null, 'USER_CENTER');
        $params = $this->para;
        $totalPoints = 0;
        $data = array(
            'total_points' => $totalPoints
        );

        $customerId = $params['customer_id'];
        $mobile = $params['mobile'];
        $customNo = $params['custom_no'];


        $usersModel = M('users', null, 'USER_CENTER');
        $userWhere = array();
        if(empty($customerId)){
            if (!empty($mobile)) {
                $mobile = PhxCrypt::phxEncrypt($mobile);
                $userWhere['mobile'] = $mobile;
            }

            if (!empty($customNo)) {
                $userWhere['custom_no'] = $customNo;
            }

            $userInfo = $usersModel->field('custom_id')->where($userWhere)->find();
            $customerId = $userInfo['custom_id'];
        }

        if (empty($customerId)) {
            $this->error(20000, $data);
            exit;
        }

        $where['customer_id'] = $customerId;
        $fields = 'customer_id,is_invalid,points_left';
        $integralInfo = $integralModel->field($fields)->where($where)->find();

        if ($integralInfo['is_invalid'] != 1) {
            $totalPoints = $integralInfo['points_left'];
        }

        $pointsInfo = array(
            'total_points' => $totalPoints
        );

        $data = $pointsInfo; // 用户积分信息

        $this->success($data);
    }

    /**
     * 获取积分日志列表接口
     * @author lirunqing 2017-6-27
     * @return [type] [description]
     */
    public function getIntegralLogList(){

        $integralLogModel = M('integral_log', null, 'USER_CENTER');
        $params = $this->para;
        $list = array();
        $totalPage = 0;
        $totalCount = 0;

        $data = array(
            'integral_log_list' => $list,
            'total_page' => $totalPage,
            'total_count' => $totalCount,
        );

        if (empty($params['customer_id']) && empty($params['order_sn']) && empty($params['start_time'])) {
            $this->error(20000, $data);
            exit;
        }
        $where = array();
        if (!empty($params['start_time'])) {
            $endTime = !empty($params['end_time']) ? $params['end_time'] : ($params['start_time'] + 86400);
            $where['add_time'] = array(
                array('egt', $params['start_time']),
                array('lt', $endTime),
            );
        }

        if (!empty($params['order_sn'])) {
             $where['order_sn'] = $params['order_sn'];
        }

        if (!empty($params['customer_id'])) {
            $where['customer_id'] = $params['customer_id'];
        }

        //$where['i.state'] = array('in', array('-4','2','3','4'));

        $fields = 'customer_id,user_id,site_id,order_sn,state,remark,integral_id,point_type,add_time,points';
        $totalCount = $integralLogModel->where($where)->count();
        $pageSize = !empty($params['page_size']) ? $params['page_size'] : 10;
        $totalPage = ceil($totalCount/$pageSize);
        $page = !empty($params['page']) ? $params['page'] : 1;
        $list = $integralLogModel->field($fields)->where($where)->order('add_time DESC')->page($page, $pageSize)->select();
        $stateArr = array(
            '4' => '取消订单',
            '3' => '订单无效',
            '2' => '积分商品删除',
            '0' => '正常',
            '-1' => '删除（订单退货）',
            '-2' => '积分过期',
            '-3' => '自主消费',
            '-4' => '客服消费',
        );

        $pointTypeArr = array(
            '0' => '订单积分',
            '1' => '签到积分',
            '2' => '评论积分',
            '3' => '积分消费',
            '4' => '转移积分',
        );

        foreach ($list as $key => $value) {
            $value['stateExp'] = $stateArr[$value['state']];
            $value['point_type'] = $pointTypeArr[$value['point_type']];
            $value['add_time'] =  date("Y-m-d H:i:s", $value['add_time']);
            $list[$key] = $value;
        }

        $data['integral_log_list'] = $list; // 积分日志列表
        $data['total_page'] = $totalPage;   // 积分日志列表总页数
        $data['total_count'] = $totalCount;   // 积分日志列表总数

        $this->success($data);
    }

    /**
     * 订单积分接收接口
     * Author 9006758
     * Date 2017-05-31
     */
    public function orderIntegral(){
        $orderInfoModel = D('Home/OrderInfoCenter');
        $integralLogModel = M('integral_log', null, 'USER_CENTER');
        $userModel = D('Home/Users');
        $integralOjb = new Integral();
        $order_not_exist = array();
        $processed = array();
        $success = array();
        $err_res = array();

        foreach($this->para as $key=>$val){

            // 1、判断订单是否存在
            $order_exist = $orderInfoModel->where(array('order_sn'=>$val['order_sn']))->count();
            if(!$order_exist){
                $order_not_exist[] = $val['order_sn'];
                continue;
            }

            // 2、判断订单是否已有积分操作
            $log_exist = $integralLogModel->where(
                array(
                    'order_sn'  => $val['order_sn'],
                    'site_id'   => intval($val['site_id']),
                    'state'     => $val['state'],
                    'point_type'=> 0,
                )
            )->field('log_id')->find();
            if(!empty($log_exist)){
                $processed[] = $val['order_sn'];
                continue;
            }

            $user_id = $userModel->where(array('custom_id'=>$val['customer_id']))->getField('user_id');
            $extra = array(
                'order_sn'  => $val['order_sn'],
                'user_id'   => intval($user_id),
                'type'      => 0,
                'rank'      => intval($val['rank']),
            );
            // 积分操作
            $res = $integralOjb->newVariety(intval($val['site_id']), $val['order_points'], $val['remark'], $val['state'], false, $extra);
            if($res == false){
                $err_res[] = array( $val['order_sn'] => $integralOjb->getError() );
            }else{
                $success[] = $val['order_sn'];
            }

        }
        $return = array(
            'order_not_exist' => $order_not_exist,  // 订单不存在
            'processed'       => $processed,        // 订单已操作过积分
            'err_res'         => $err_res,          // 失败数据
            'success'         => $success,          // 操作成功
        );
        $this->ajaxReturn($return);
    }

}