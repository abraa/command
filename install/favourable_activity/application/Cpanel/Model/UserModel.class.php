<?php
/**
 * ====================================
 * 微信会员模型
 * ====================================
 * Author: 9004396
 * Date: 2017-01-11 13:52
 * ====================================
 * Project: new.m.chinaskin.cn
 * File: UserModel.class.php
 * ====================================
 */
namespace Cpanel\Model;

use Common\Extend\PhxCrypt;
use Common\Extend\Time;
use Common\Model\CpanelModel;

class UserModel extends CpanelModel
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $config = C('db_config.1');
        $this->connection = array_merge($config['CONFIG'], array('DB_TYPE' => C('DB_TYPE')));
        $this->tablePrefix = $this->connection['DB_PREFIX'];
        $this->tableName = 'bind_user';
    }

    public function filter($params)
    {
        $where = array();
        if ($params['genre'] != 'none') {
            switch ($params['genre']) {
                case 'nickname':
                    $where['nickname'] = array('LIKE', "%{$params['keyword']}%");
                    break;
                case 'mobile':
                    $where['mobile'] = PhxCrypt::phxEncrypt($params['keyword']);
                    break;
            }

        }
        if ($params['time'] != 'none') {
            switch ($params['time']) {
                case 'first':
                    $where['add_time'] = array(array('EGT', strtotime($params['start_time'])), array('LT', strtotime($params['end_time'])));
                    break;
                case 'cancel_time':
                    $where['cancel_time'] = array(array('EGT', strtotime($params['start_time'])), array('LT', strtotime($params['end_time'])));
                    break;
                case 'again':
                    $where['subscribe_time'] = array(array('EGT', strtotime($params['start_time'])), array('LT', strtotime($params['end_time'])));
                    break;
            }
        }
        $this->where($where)->order('bind_id desc');
        return $this;
    }


    public function format($data)
    {
        if (!empty($data)) {
            $WechatTagBind = D('WechatTagBind');
            $userActivityModel = D('UserActivity');
            $wechatAccountModel = D('WechatAccount');
            $userModel = D('Home/Users');
            $UserTag = D('UserTag');
            foreach ($data['rows'] as &$item) {

                //会员ID
                $userId = $userModel->where(array('mobile' => $item['mobile']))->getField('user_id');
                $item['user_id'] = $userId;

                $item['mobile'] = PhxCrypt::phxDecrypt($item['mobile']);
                //最后活动时间
                $item['last_activity_time'] = $userActivityModel->where("openid = '{$item['openid']}'")->getField('last_activity_time');
                $item['last_activity_time'] = empty($item['last_activity_time']) ? '' : date('Y-m-d H:i:s', $item['last_activity_time']);
                //查询对应的绑定标签
                $tag_id_list = $WechatTagBind->field('tag_id')->where("openid = '$item[openid]'")->select();
                $item['tag_list'] = '';
                if (!empty($tag_id_list)) {
                    foreach ($tag_id_list as $value) {
                        $tag_name = $UserTag->where("tag_id = '$value[tag_id]'")->getField('name');
						if($tag_name){
							$item['tag_list'] .= '<a class="list_tag_name easyui-linkbutton" data-options="plain:false">' . $tag_name . '</a>';
						}
                    }
                }
                //绑定对应公众帐号
                $wechatAccount = $wechatAccountModel->where(array('id' => $item['wechatacountid']))->find();
                $item['wechat'] = '未知公众号';
                if($wechatAccount){
                    $item['wechat'] = $wechatAccount['text'];
                }

            }
        }
        return $data;
    }


}
